[{"/Users/home/Flatiron/5mod_proj/frontend_mod5/src/reportWebVitals.js":"1","/Users/home/Flatiron/5mod_proj/frontend_mod5/src/components/Logout.js":"2","/Users/home/Flatiron/5mod_proj/frontend_mod5/src/utils/refreshToken.js":"3","/Users/home/Flatiron/5mod_proj/frontend_mod5/src/index.js":"4","/Users/home/Flatiron/5mod_proj/frontend_mod5/src/components/App.js":"5","/Users/home/Flatiron/5mod_proj/frontend_mod5/src/actions/auth.js":"6","/Users/home/Flatiron/5mod_proj/frontend_mod5/src/reducers/index.js":"7","/Users/home/Flatiron/5mod_proj/frontend_mod5/src/reducers/auth.js":"8","/Users/home/Flatiron/5mod_proj/frontend_mod5/src/components/Dashboard.js":"9","/Users/home/Flatiron/5mod_proj/frontend_mod5/src/components/Navbar.js":"10","/Users/home/Flatiron/5mod_proj/frontend_mod5/src/reducers/user.js":"11","/Users/home/Flatiron/5mod_proj/frontend_mod5/src/components/GmailContainer.js":"12","/Users/home/Flatiron/5mod_proj/frontend_mod5/src/components/OpenProjectsContainer.js":"13","/Users/home/Flatiron/5mod_proj/frontend_mod5/src/reducers/property.js":"14","/Users/home/Flatiron/5mod_proj/frontend_mod5/src/actions/data.js":"15","/Users/home/Flatiron/5mod_proj/frontend_mod5/src/components/OpenProjects.js":"16","/Users/home/Flatiron/5mod_proj/frontend_mod5/src/reducers/openProjects.js":"17","/Users/home/Flatiron/5mod_proj/frontend_mod5/src/reducers/closedProjects.js":"18","/Users/home/Flatiron/5mod_proj/frontend_mod5/src/reducers/editReducer.js":"19","/Users/home/Flatiron/5mod_proj/frontend_mod5/src/components/ProjectEditForm.js":"20","/Users/home/Flatiron/5mod_proj/frontend_mod5/src/components/NewProjectForm.js":"21","/Users/home/Flatiron/5mod_proj/frontend_mod5/src/components/ClosedProjects.js":"22","/Users/home/Flatiron/5mod_proj/frontend_mod5/src/reducers/reportReducer.js":"23","/Users/home/Flatiron/5mod_proj/frontend_mod5/src/components/ClosedProjectsContainer.js":"24","/Users/home/Flatiron/5mod_proj/frontend_mod5/src/reducers/labels.js":"25","/Users/home/Flatiron/5mod_proj/frontend_mod5/src/reducers/gmailReducer.js":"26","/Users/home/Flatiron/5mod_proj/frontend_mod5/src/components/Gmails.js":"27","/Users/home/Flatiron/5mod_proj/frontend_mod5/src/reducers/newProjReducer.js":"28","/Users/home/Flatiron/5mod_proj/frontend_mod5/src/components/ReportPDF.js":"29","/Users/home/Flatiron/5mod_proj/frontend_mod5/src/components/ReportTableContainer.js":"30","/Users/home/Flatiron/5mod_proj/frontend_mod5/src/components/ReportTable.js":"31","/Users/home/Flatiron/5mod_proj/frontend_mod5/src/components/Login.js":"32"},{"size":362,"mtime":1607988203353,"results":"33","hashOfConfig":"34"},{"size":1157,"mtime":1614273851564,"results":"35","hashOfConfig":"34"},{"size":689,"mtime":1608056754248,"results":"36","hashOfConfig":"34"},{"size":647,"mtime":1608223332988,"results":"37","hashOfConfig":"34"},{"size":1452,"mtime":1614616689289,"results":"38","hashOfConfig":"34"},{"size":349,"mtime":1608160970130,"results":"39","hashOfConfig":"34"},{"size":639,"mtime":1609788437779,"results":"40","hashOfConfig":"34"},{"size":352,"mtime":1608142634529,"results":"41","hashOfConfig":"34"},{"size":6861,"mtime":1609950542021,"results":"42","hashOfConfig":"34"},{"size":1547,"mtime":1609920063693,"results":"43","hashOfConfig":"34"},{"size":235,"mtime":1608142502315,"results":"44","hashOfConfig":"34"},{"size":752,"mtime":1609910206074,"results":"45","hashOfConfig":"34"},{"size":921,"mtime":1609950600254,"results":"46","hashOfConfig":"34"},{"size":251,"mtime":1608179068930,"results":"47","hashOfConfig":"34"},{"size":1720,"mtime":1609955479831,"results":"48","hashOfConfig":"34"},{"size":7252,"mtime":1609955506748,"results":"49","hashOfConfig":"34"},{"size":1046,"mtime":1609955173889,"results":"50","hashOfConfig":"34"},{"size":1172,"mtime":1609955812192,"results":"51","hashOfConfig":"34"},{"size":300,"mtime":1609785384149,"results":"52","hashOfConfig":"34"},{"size":3953,"mtime":1609950170549,"results":"53","hashOfConfig":"34"},{"size":3935,"mtime":1609948721578,"results":"54","hashOfConfig":"34"},{"size":5406,"mtime":1609951447231,"results":"55","hashOfConfig":"34"},{"size":327,"mtime":1609815425399,"results":"56","hashOfConfig":"34"},{"size":795,"mtime":1609908106046,"results":"57","hashOfConfig":"34"},{"size":237,"mtime":1608824445605,"results":"58","hashOfConfig":"34"},{"size":292,"mtime":1609386524112,"results":"59","hashOfConfig":"34"},{"size":8369,"mtime":1610049180803,"results":"60","hashOfConfig":"34"},{"size":305,"mtime":1609793256272,"results":"61","hashOfConfig":"34"},{"size":4815,"mtime":1610052961525,"results":"62","hashOfConfig":"34"},{"size":769,"mtime":1609957151091,"results":"63","hashOfConfig":"34"},{"size":4245,"mtime":1609957514112,"results":"64","hashOfConfig":"34"},{"size":1947,"mtime":1614616633752,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"1hcn847",{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"73"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"117"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"76"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/home/Flatiron/5mod_proj/frontend_mod5/src/reportWebVitals.js",[],["141","142"],"/Users/home/Flatiron/5mod_proj/frontend_mod5/src/components/Logout.js",["143","144"],"/Users/home/Flatiron/5mod_proj/frontend_mod5/src/utils/refreshToken.js",[],["145","146"],"/Users/home/Flatiron/5mod_proj/frontend_mod5/src/index.js",[],["147","148"],"/Users/home/Flatiron/5mod_proj/frontend_mod5/src/components/App.js",["149"],"/Users/home/Flatiron/5mod_proj/frontend_mod5/src/actions/auth.js",[],"/Users/home/Flatiron/5mod_proj/frontend_mod5/src/reducers/index.js",[],["150","151"],"/Users/home/Flatiron/5mod_proj/frontend_mod5/src/reducers/auth.js",[],["152","153"],"/Users/home/Flatiron/5mod_proj/frontend_mod5/src/components/Dashboard.js",[],"/Users/home/Flatiron/5mod_proj/frontend_mod5/src/components/Navbar.js",[],"/Users/home/Flatiron/5mod_proj/frontend_mod5/src/reducers/user.js",[],"/Users/home/Flatiron/5mod_proj/frontend_mod5/src/components/GmailContainer.js",["154"],"import React from 'react'\nimport { connect } from 'react-redux'\nimport { Button } from 'semantic-ui-react'\nimport Gmails from './Gmails'\n\nclass GmailContainer extends React.Component {\n    render() {\n        return (\n            <div className='tbl container'>\n                {this.props.gmails\n                ?\n               <Gmails history={this.props.history} updateGmails={this.props.updateGmails}/>\n                :\n               <h5>Gmails Loading...</h5>\n                }\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n      auth: state.auth,\n      user: state.user,\n      property: state.property,\n      gmails: state.gmails\n    }\n  }\n\nexport default connect(mapStateToProps, null)(GmailContainer)","/Users/home/Flatiron/5mod_proj/frontend_mod5/src/components/OpenProjectsContainer.js",[],"/Users/home/Flatiron/5mod_proj/frontend_mod5/src/reducers/property.js",[],"/Users/home/Flatiron/5mod_proj/frontend_mod5/src/actions/data.js",[],"/Users/home/Flatiron/5mod_proj/frontend_mod5/src/components/OpenProjects.js",[],"/Users/home/Flatiron/5mod_proj/frontend_mod5/src/reducers/openProjects.js",[],"/Users/home/Flatiron/5mod_proj/frontend_mod5/src/reducers/closedProjects.js",[],"/Users/home/Flatiron/5mod_proj/frontend_mod5/src/reducers/editReducer.js",[],"/Users/home/Flatiron/5mod_proj/frontend_mod5/src/components/ProjectEditForm.js",[],"/Users/home/Flatiron/5mod_proj/frontend_mod5/src/components/NewProjectForm.js",[],"/Users/home/Flatiron/5mod_proj/frontend_mod5/src/components/ClosedProjects.js",["155"],"import React from 'react'\nimport { connect } from 'react-redux'\nimport { Button, Form, Checkbox } from 'semantic-ui-react'\nimport DataTable from 'react-data-table-component';\nimport { addToReport } from '../actions/data';\n\n\nlet columns;\nlet reportProjects;\n\nconst customStyles = {\n    header: {\n      style: {\n        fontSize: '36px',\n        fontWeight: 900,\n        color: '#FFFFFF',\n        backgroundColor: '#022140',\n        minHeight: '56px',\n        paddingLeft: '10%',\n        paddingRight: '90%',\n        paddingTop: '10px',\n        borderTopLeftRadius: '9px',\n        borderTopRightRadius: '9px',\n      },\n    },\n    subHeader: {\n      style: {\n        backgroundColor: '#2D5F5D',\n        minHeight: '52px',\n      },\n    },\n    headRow: {\n      style: {\n        backgroundColor: '#e0effe',\n      }\n    },\n    headCells: {\n      style: {\n        fontSize: '20px',\n        fontWeight: 500,\n      }\n    },\n    pagination: {\n      style: {\n        color: '#ffffff',\n        fontSize: '13px',\n        minHeight: '40px',\n        backgroundColor: '#022140',\n        borderTopStyle: 'solid',\n        borderTopWidth: '1px',\n        borderTopColor: '#2d5f5d',\n      },\n      pageButtonsStyle: {\n        borderRadius: '50%',\n        height: '40px',\n        width: '40px',\n        padding: '8px',\n        margin: 'px',\n        cursor: 'pointer',\n        transition: '0.4s',\n        color: '#2d5f5d',\n        fill: '#2d5f5d',\n        backgroundColor: 'transparent',\n        '&:disabled': {\n          cursor: 'not-allowed',\n          color: '#265077',\n          fill: '#265077',\n        },\n        '&:hover:not(:disabled)': {\n          backgroundColor: '#1e4258',\n          fill: '#ffffff'\n        },\n        '&:focus': {\n          outline: 'none',\n          backgroundColor: '#1e4258',\n          fill: '#ffffff'\n        },\n      },\n    },\n  }\n\nclass ClosedProjects extends React.Component {\n\n    state = { toggledClearRows: false }\n\n    handleChange = (state) => {\n        // You can use setState or dispatch with something like Redux so we can use the retrieved data\n        reportProjects = state.selectedRows\n        // console.log('Selected Rows: ', reportProjects);\n    };\n\n    handleClearRows = () => {\n        this.setState({ toggledClearRows: !this.state.toggledClearRows})\n    }\n\n    handleClick = () => {\n        reportProjects.forEach(p => p.add_to_report = true)\n        this.props.addToReport(reportProjects)\n        this.props.history.push('/reports/new')\n    }\n\n    componentDidMount(){\n\n        columns = [\n            {\n                name: 'Date Opened',\n                selector: 'created_at',\n                format: row => <div><div style={{ fontWeight: 400 }}>{new Date(Date.parse(row.created_at)).getMonth() + 1 + '/' + new Date(Date.parse(row.created_at)).getDate() + '/' + new Date(Date.parse(row.created_at)).getFullYear()}</div></div>,\n                sortable: true\n            },\n            {\n                name: 'Project',\n                selector: 'name',\n                cell: row => <div style={{ fontWeight: 400 }}>{row.name}</div>,\n                sortable: true\n            },\n            {\n                name: 'Category',\n                selector: 'category',\n                sortable: true\n            },\n            {\n                name: 'Subcategory',\n                selector: 'subcategory',\n                sortable: true\n            },\n            {\n                name: 'Details',\n                cell: row => <div style={{ fontWeight: 400 }}>{row.description}</div>,\n                sortable: false,\n                grow: 2\n            },\n            {\n                name: 'Date Closed',\n                selector: 'updated_at',\n                format: row => <div style={{ fontWeight: 400 }}>{new Date(Date.parse(row.updated_at)).getMonth() + 1 + '/' + new Date(Date.parse(row.updated_at)).getDate() + '/' + new Date(Date.parse(row.updated_at)).getFullYear()}</div>,\n                sortable: true\n            },\n        ]\n\n    }\n\n\n    render() {\n        return (\n            <div>\n              {this.props.closedProjects\n                ?\n               <div>\n               <DataTable\n                title=\"Closed Projects\"\n                columns={columns}\n                data={this.props.closedProjects}\n                theme='solarized'\n                striped\n                customStyles={customStyles}\n                defaultSortField='created_at'\n                pagination\n                paginationPerPage= {5}\n                paginationRowsPerPageOptions={[5,10,15,20]}\n                selectableRows\n                selectableRowsComponent={Checkbox}\n                onSelectedRowsChange={this.handleChange}\n                clearSelectedRows={this.state.toggledClearRows}\n                />\n                <div>\n                <Button fluid='true' color='blue' attached='bottom' onClick={this.handleClick}>Create New Report w/ Selected Projects</Button>\n                </div>\n                </div>\n                :\n               <h5>Closed Projects Loading...</h5>\n              }\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n      auth: state.auth,\n      user: state.user,\n      property: state.property,\n      closedProjects: state.closedProjects\n    }\n  }\n\n  const mapDispatchToProps = {\n    addToReport\n  }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ClosedProjects)",["156","157"],"/Users/home/Flatiron/5mod_proj/frontend_mod5/src/reducers/reportReducer.js",[],"/Users/home/Flatiron/5mod_proj/frontend_mod5/src/components/ClosedProjectsContainer.js",[],"/Users/home/Flatiron/5mod_proj/frontend_mod5/src/reducers/labels.js",[],["158","159"],"/Users/home/Flatiron/5mod_proj/frontend_mod5/src/reducers/gmailReducer.js",[],"/Users/home/Flatiron/5mod_proj/frontend_mod5/src/components/Gmails.js",["160"],"import React from 'react'\nimport { connect } from 'react-redux'\nimport { Button, ButtonGroup, Checkbox } from 'semantic-ui-react'\nimport DataTable, { createTheme } from 'react-data-table-component';\nimport { newGmailProj, newProject } from '../actions/data';\n\nlet columns\n\ncreateTheme('solarized', {\n    text: {\n      primary: '#022140',\n      secondary: '#265077',\n      disabled: 'rgba(0, 0, 0, 0.38)',\n    },\n    background: {\n      default: '#f3f9ff',\n    },\n    striped: {\n      default: '#e0effe',\n      text: '#022140',\n    },\n    context: {\n      background: '#2d5f5d',\n      text: '#FFFFFF',\n    },\n    divider: {\n      default: '#265077',\n    },\n    action: {\n      button: '#FFFFFF',\n      hover: '#265077',\n      disabled: 'rgba(0,0,0,.12)',\n    },\n    button: {\n      default: 'rgba(0,0,0,.54)',\n      focus: 'rgba(0,0,0,.12)',\n      hover: '#2d5f5d',\n      disabled: 'rgba(0, 0, 0, .18)',\n    },\n    sortFocus: {\n      default: 'rgba(0, 0, 0, .54)',\n    },\n    selected: {\n      default: '#e3f2fd',\n      text: 'rgba(0, 0, 0, 0.87)',\n    },\n    highlightOnHover: {\n      default: '#265077',\n      text: '#ffffff',\n    }\n  });\n\n  const customStyles = {\n    header: {\n      style: {\n        fontSize: '36px',\n        fontWeight: 900,\n        color: '#FFFFFF',\n        backgroundColor: '#022140',\n        minHeight: '56px',\n        paddingLeft: '10%',\n        paddingRight: '90%',\n        paddingTop: '10px',\n        borderTopLeftRadius: '9px',\n        borderTopRightRadius: '9px',\n      },\n    },\n    subHeader: {\n      style: {\n        backgroundColor: '#2D5F5D',\n        minHeight: '52px',\n      },\n    },\n    headRow: {\n      style: {\n        backgroundColor: '#e0effe',\n      }\n    },\n    headCells: {\n      style: {\n        fontSize: '20px',\n        fontWeight: 500,\n      }\n    },\n    pagination: {\n      style: {\n        color: '#ffffff',\n        fontSize: '13px',\n        minHeight: '40px',\n        backgroundColor: '#022140',\n        borderTopStyle: 'solid',\n        borderTopWidth: '1px',\n        borderTopColor: '#2d5f5d',\n      },\n      pageButtonsStyle: {\n        borderRadius: '50%',\n        height: '40px',\n        width: '40px',\n        padding: '8px',\n        margin: 'px',\n        cursor: 'pointer',\n        transition: '0.4s',\n        color: '#2d5f5d',\n        fill: '#2d5f5d',\n        backgroundColor: 'transparent',\n        '&:disabled': {\n          cursor: 'not-allowed',\n          color: '#265077',\n          fill: '#265077',\n        },\n        '&:hover:not(:disabled)': {\n          backgroundColor: '#1e4258',\n          fill: '#ffffff'\n        },\n        '&:focus': {\n          outline: 'none',\n          backgroundColor: '#1e4258',\n          fill: '#ffffff'\n        },\n      },\n    },\n  }\n\nlet quickProjects;\n\nclass Gmails extends React.Component {\n\n    state = { toggledClearRows: false }\n\n    handleChange = (state) => {\n        // You can use setState or dispatch with something like Redux so we can use the retrieved data\n        quickProjects = state.selectedRows\n        console.log('Quick Projs: ', quickProjects);\n    };\n\n    handleClearRows = () => {\n        this.setState({ toggledClearRows: !this.state.toggledClearRows})\n    }\n\n    handleClick = (e) => {\n      const gmailProj = {\n        description: e.target.parentNode.previousSibling.innerText,\n        subcategory: e.target.parentNode.previousSibling.previousSibling.previousSibling.innerText,\n        category: e.target.parentNode.previousSibling.previousSibling.previousSibling.previousSibling.innerText,\n        name: e.target.parentNode.previousSibling.previousSibling.previousSibling.previousSibling.previousSibling.innerText,\n      }\n      console.log(gmailProj)\n      this.props.newGmailProj(gmailProj)\n      this.props.history.push(`/projects/new`)\n    }\n\n    quickClick = () => {\n      quickProjects.forEach(p => {\n        let subcat;\n        subcat = p.subCategory ? p.subCategory[0] : null\n        let cat;\n        cat = p.category ? p.category[0] : null\n        const qp = {\n        property_id: this.props.property[0].id,\n        description: p.body,\n        subcategory: subcat,\n        category: cat,\n        name: p.subject\n        }\n        const reqObj = {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(qp)\n        }\n        console.log(reqObj)\n        fetch(`http://localhost:5000/quick_project`, reqObj)\n        .then(resp => resp.json())\n        .then(data => {\n            // console.log(data)\n          if (data.error) {\n            alert(data.error)\n            // this.setState({\n            //   error: data.error\n            // })\n          } else {\n            console.log(data)\n            this.props.newProject(data)\n            this.handleClearRows()\n            // this.props.newProject(data)\n            // this.props.history.push('/dashboard')\n          }\n        })\n\n      })\n    }\n\n    newProjButton = () => (<Button class=\"ui compact button\" color='teal' onClick={(e)=> this.handleClick(e)}>Create Project</Button>)\n\n    componentDidMount(){\n\n        columns = [\n            {\n                name: 'Date',\n                selector: 'date',\n                cell: row => <div style={{ fontWeight: 400 }}>{row.date}</div>,\n                wrap:true,\n                sortable: true\n            },\n            {\n                name: 'Subject',\n                cell: row => <div style={{ fontWeight: 400 }}>{row.subject}</div>,\n                sortable: false\n            },\n            {\n                name: 'Category',\n                selector: 'category',\n                sortable: true\n            },\n            {\n                name: 'SubCategory',\n                selector: 'subCategory',\n                sortable: true\n            },\n            {\n              name: 'Sender',\n              selector: 'sender',\n              cell: row => (\n                  <div>\n                    {\n                    row.sender.split('<')[0]\n                    }\n                  </div>\n                ),\n              sortable: true,\n              wrap: true\n            },\n            {\n              name: '',\n              cell: row => <div data-tag=\"allowRowEvents\"><div style={{ fontWeight: 400 }}>{row.body}</div></div>,\n              sortable: false,\n              wrap: true,\n              left: true,\n              grow: 2\n            },\n            {\n                name: '',\n                // button: true,\n                // ignoreRowClick: true,\n                cell: () => <this.newProjButton class=\"ui compact button\">Create Project</this.newProjButton>\n            }\n        ]\n\n    }\n\n\n    render() {\n        return (\n            <div>\n              {this.props.gmails\n                ?\n               <div>\n               <DataTable\n                title=\"Gmail Inbox\"\n                columns={columns}\n                data={this.props.gmails}\n                noDataComponent='Loading...'\n                defaultSortField='date'\n                defaultSortAsc={false}\n                theme='solarized'\n                customStyles={customStyles}\n                striped={true}\n                pagination\n                paginationPerPage= {5}\n                paginationRowsPerPageOptions={[5,10,15,20]}\n                selectableRows\n                selectableRowsComponent={Checkbox}\n                onSelectedRowsChange={this.handleChange}\n                clearSelectedRows={this.state.toggledClearRows}\n                />\n               <div>\n                <Button.Group attached='bottom' fluid>\n                  <Button color='pink' onClick={this.quickClick}>Quick Create Projects for Selected</Button>\n                  <Button.Or className='gmailOr' />\n                  <Button color='pink' style={{width:'261px'}}content='Load Gmails' icon={{name:'google', color:'white'}} onClick={this.props.updateGmails}/>\n                </Button.Group>\n               </div>\n               </div>\n                :\n               <h5>Messages Loading...</h5>\n              }\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n      auth: state.auth,\n      user: state.user,\n      property: state.property,\n      gmails: state.gmails\n    }\n  }\n\n  const mapDispatchToProps = {\n    newGmailProj,\n    newProject\n  }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Gmails)","/Users/home/Flatiron/5mod_proj/frontend_mod5/src/reducers/newProjReducer.js",[],"/Users/home/Flatiron/5mod_proj/frontend_mod5/src/components/ReportPDF.js",[],"/Users/home/Flatiron/5mod_proj/frontend_mod5/src/components/ReportTableContainer.js",["161"],"import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { closedProjects } from '../actions/data'\nimport ReportTable from './ReportTable'\n\n\nclass ReportTableContainer extends React.Component {\n\n    render() {\n        return (\n            <div className='report container'>\n              {this.props.projects\n                ?\n               <ReportTable />\n                :\n               <h5>Project Report Loading...</h5>\n              }\n            </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n      auth: state.auth,\n      user: state.user,\n      property: state.property,\n      projects: state.reportProjects\n    }\n  }\n\nexport default connect(mapStateToProps, { closedProjects })(ReportTableContainer)","/Users/home/Flatiron/5mod_proj/frontend_mod5/src/components/ReportTable.js",[],"/Users/home/Flatiron/5mod_proj/frontend_mod5/src/components/Login.js",[],{"ruleId":"162","replacedBy":"163"},{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","severity":1,"message":"167","line":7,"column":18,"nodeType":"168","messageId":"169","endLine":7,"endColumn":29},{"ruleId":"166","severity":1,"message":"170","line":7,"column":31,"nodeType":"168","messageId":"169","endLine":7,"endColumn":39},{"ruleId":"162","replacedBy":"171"},{"ruleId":"164","replacedBy":"172"},{"ruleId":"162","replacedBy":"173"},{"ruleId":"164","replacedBy":"174"},{"ruleId":"166","severity":1,"message":"175","line":11,"column":8,"nodeType":"168","messageId":"169","endLine":11,"endColumn":31},{"ruleId":"162","replacedBy":"176"},{"ruleId":"164","replacedBy":"177"},{"ruleId":"162","replacedBy":"178"},{"ruleId":"164","replacedBy":"179"},{"ruleId":"166","severity":1,"message":"180","line":3,"column":10,"nodeType":"168","messageId":"169","endLine":3,"endColumn":16},{"ruleId":"166","severity":1,"message":"181","line":3,"column":18,"nodeType":"168","messageId":"169","endLine":3,"endColumn":22},{"ruleId":"162","replacedBy":"182"},{"ruleId":"164","replacedBy":"183"},{"ruleId":"162","replacedBy":"184"},{"ruleId":"164","replacedBy":"185"},{"ruleId":"166","severity":1,"message":"167","line":3,"column":18,"nodeType":"168","messageId":"169","endLine":3,"endColumn":29},{"ruleId":"166","severity":1,"message":"186","line":1,"column":17,"nodeType":"168","messageId":"169","endLine":1,"endColumn":26},"no-native-reassign",["187"],"no-negated-in-lhs",["188"],"no-unused-vars","'ButtonGroup' is defined but never used.","Identifier","unusedVar","'Checkbox' is defined but never used.",["187"],["188"],["187"],["188"],"'ClosedProjectsContainer' is defined but never used.",["187"],["188"],["187"],["188"],"'Button' is defined but never used.","'Form' is defined but never used.",["187"],["188"],["187"],["188"],"'Component' is defined but never used.","no-global-assign","no-unsafe-negation"]